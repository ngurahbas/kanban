services:
  postgres:
    image: postgres:17.5
    container_name: kanban-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: kanban
      POSTGRES_USER: kanban
      POSTGRES_PASSWORD: kanban
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    mem_limit: 100m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kanban -d kanban"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["postgres", "-c", "shared_buffers=32MB", "-c", "max_connections=50", "-c", "effective_cache_size=64MB", "-c", "work_mem=2MB", "-c", "maintenance_work_mem=16MB"]

  valkey:
    image: valkey/valkey:latest
    container_name: kanban-valkey
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - valkeydata:/data
    mem_limit: 100m
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["valkey-server", "--save", "", "--appendonly", "no", "--maxmemory", "64mb", "--maxmemory-policy", "allkeys-lru"]

  keycloak:
    build:
      context: ./src/main/resources/keycloak
      dockerfile: keycloak.Dockerfile
    container_name: kanban-keycloak
    restart: unless-stopped
    command: start-dev --import-realm
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
    ports:
      - "9080:8080"
    mem_limit: 1024m

volumes:
  pgdata:
  valkeydata: